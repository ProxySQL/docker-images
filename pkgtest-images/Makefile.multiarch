#!/usr/bin/make -f

NPROCS := $(shell nproc)
export MAKEFLAGS=-j ${NPROCS}

ifdef SILENT
override SILENT=-q
endif

ifdef NOCACHE
override NOCACHE=--no-cache
endif


.PHONY: default
default: pkgtest

.PHONY: clean
clean:
	docker images -a | grep "proxysql/packaging" | grep "pkgtest-" | awk '{print $$3}' | sort | uniq | xargs -r docker rmi -f

.PHONY: cleanall
cleanall:
	docker system prune -a


.PHONY: pkgtest
pkgtest: $(wildcard pkgtest-*)


.PHONY: pkgtest-centos
pkgtest-centos: $(wildcard pkgtest-centos*)

.PHONY: pkgtest-fedora
pkgtest-fedora: $(wildcard pkgtest-fedora*)

.PHONY: pkgtest-debian
pkgtest-debian: $(wildcard pkgtest-debian*)

.PHONY: pkgtest-ubuntu
pkgtest-ubuntu: $(wildcard pkgtest-ubuntu*)

.PHONY: pkgtest-opensuse
pkgtest-opensuse: $(wildcard pkgtest-opensuse*)

.PHONY: pkgtest-almalinux
pkgtest-almalinux: $(wildcard pkgtest-almalinux*)


NOARM64 := pkgtest-centos6 pkgtest-ubuntu14
PLTFRMS := linux/arm64/v8 linux/amd64

#.SILENT: pkgtest-*
.PHONY: pkgtest-*
.NOTPARALLEL: pkgtest-*
pkgtest-*: BLD_PLTFRMS=$(if $(findstring $@, $(NOARM64)),$(filter-out linux/arm64%,$(PLTFRMS)),$(PLTFRMS))
pkgtest-*: ARG_PLTFRMS=$(subst $() ,$(shell echo ,),$(BLD_PLTFRMS))
pkgtest-*:
	@echo "building $@ for '$(ARG_PLTFRMS)'"
	@# try building, fallback to native
	docker buildx build ${NOCACHE} -t proxysql/packaging:$@ --pull --platform $(ARG_PLTFRMS) $@ --push ${SILENT} || \
	docker buildx build ${NOCACHE} -t proxysql/packaging:$@ --pull $@ --push ${SILENT}
	@echo 'tagged $@'


images:
	@echo "Available 'proxysql/packaging' images:"
	docker images | grep "proxysql/packaging"
